{"version":3,"file":"index.test.mjs","sources":["../../../../../src/mods/binary/opaque/index.test.ts"],"sourcesContent":["import { assert, test } from \"@hazae41/phobos\";\nimport { relative, resolve } from \"node:path\";\nimport { Readable } from \"../readable/index.js\";\nimport { Opaque } from \"./index.js\";\n\nfunction equals(a: Uint8Array, b: Uint8Array) {\n  return Buffer.from(a).equals(Buffer.from(b))\n}\n\nconst directory = resolve(\"./dist/test/\")\nconst { pathname } = new URL(import.meta.url)\nconsole.log(relative(directory, pathname.replace(\".mjs\", \".ts\")))\n\ntest(\"Opaque\", async ({ test }) => {\n  const bytes = new Uint8Array([1, 2, 3, 4, 5])\n\n  const opaque = Readable.readFromBytesOrThrow(Opaque, bytes)\n  const opaque2 = opaque.readIntoOrThrow(Opaque).cloneOrThrow()\n  const opaque3 = Opaque.writeFromOrThrow(opaque2)\n\n  assert(equals(opaque.bytes, opaque2.bytes))\n  assert(equals(opaque2.bytes, opaque3.bytes))\n})"],"names":[],"mappings":";;;;;AAKA,SAAS,MAAM,CAAC,CAAa,EAAE,CAAa,EAAA;AAC1C,IAAA,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9C;AAEA,MAAM,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC;AACzC,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AAC7C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AAEjE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,KAAI;AAChC,IAAA,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAE7C,MAAM,MAAM,GAAG,QAAQ,CAAC,oBAAoB,CAAC,MAAM,EAAE,KAAK,CAAC;IAC3D,MAAM,OAAO,GAAG,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE;IAC7D,MAAM,OAAO,GAAG,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC;AAEhD,IAAA,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3C,IAAA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AAC9C,CAAC,CAAC"}